quarkus.application.name=${APP_NAME}
quarkus.http.port=${APP_PORT}

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER}
quarkus.datasource.password=${DB_PASSWORD}

quarkus.datasource.reactive=true
quarkus.datasource.reactive.url=${DB_URL}

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=${SQL_INIT_SCRIPT}

zookeeper.address=${ZOOKEEPER_ADDRESS}
quarkus.kafka.devservices.enabled=${KAFKA_DEV_ENABLED}

mp.messaging.connector.smallrye-kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}

mp.messaging.incoming.registration-response-in.connector=smallrye-kafka
mp.messaging.incoming.registration-response-in.topic=registration-response
mp.messaging.incoming.registration-response-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.registration-error-in.connector=smallrye-kafka
mp.messaging.incoming.registration-error-in.topic=registration-error
mp.messaging.incoming.registration-error-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.registration-request-out.connector=smallrye-kafka
mp.messaging.outgoing.registration-request-out.topic=registration-request
mp.messaging.outgoing.registration-request-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
